#!/usr/bin/env node
/* vim: set ft=javascript: */
/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

/*
 * Copyright (c) 2015, Joyent, Inc.
 */

/*
 * manta-hk: manage Manta housekeeping operations
 */

var mod_bunyan = require('bunyan');
var mod_cmdln = require('cmdln');
var mod_cmdutil = require('cmdutil');
var mod_extsprintf = require('extsprintf');
var mod_jsprim = require('jsprim');
var mod_http = require('http');
var mod_manta = require('manta');
var mod_util = require('util');
var printf = mod_extsprintf.printf;
var sprintf = mod_extsprintf.sprintf;

var mod_dumps = require('../lib/dumps');

/*
 * node-cmdln boilerplate
 */
function MantaHk()
{
	mod_cmdln.Cmdln.call(this, {
	    'name': 'manta-hk',
	    'desc': 'manage Manta housekeeping operations'
	});
}

mod_util.inherits(MantaHk, mod_cmdln.Cmdln);
MantaHk.showErrStack = false;

/*
 * Initialization: set up logger and Manta client.
 */
MantaHk.prototype.init = function (opts, args, callback)
{
	this.mhk_log = new mod_bunyan({
	    'name': 'manta-hk',
	    'level': process.env['LOG_LEVEL'] || 'error'
	});

	this.mhk_manta = mod_manta.createBinClient({
	    'log': this.mhk_log.child({ 'component': 'manta' })
	});
	/* Bad, manta client! */
	process.removeAllListeners('uncaughtException');

	callback();
};

/*
 * Cleanup: close Manta client.
 */
MantaHk.prototype.fini = function (subcmd, _, callback)
{
	this.mhk_manta.close();
	callback();
};

/*
 * manta-hk dumps: list information about recent Manatee dumps
 */
MantaHk.prototype.do_dumps = function (subcmd, opts, args, callback)
{
	var config;

	config = {
	    'endDate': opts.date,
	    'ndays': opts.days,
	    'shards': opts.shard,
	    'dumpRoot': mod_dumps.defaultDumpRoot,
	    'concurrency': 10,
	    'log': this.mhk_log,
	    'manta': this.mhk_manta
	};

	mod_dumps.listDumps(config, function (err, results) {
		if (err) {
			mod_cmdutil.fail(err);
		}

		/*
		 * XXX Should use an object with useful methods.
		 * Definitely shouldn't be reaching into DumpLister.
		 */
		printDumpsByDate(results.dl_shards, results.dl_dumps);
		callback();
	});
};

MantaHk.prototype.do_dumps.options = [ {
    'names': [ 'date', 'd' ],
    'type': 'date',
    'helpArg': 'DATE',
    'help': 'Scan backwards from date DATE',
    'default': new Date()
}, {
    'names': [ 'days', 'D' ],
    'type': 'positiveInteger',
    'helpArg': 'NDAYS',
    'help': 'Scan backwards NDAYS from DATE',
    'default': 1
}, {
    'names': [ 'shard', 's' ],
    'type': 'arrayOfString',
    'helpArg': 'SHARD...',
    'help': 'Only show dumps for shards SHARD...',
    'default': null
} ];

MantaHk.prototype.do_dumps.help = [
    'List Manatee dump information.',
    '',
    'The "dumps" command reports on Manatee dumps over the given date range.',
    'In the default output mode, missing or late dumps are marked with an ',
    'asterisk ("*").',
    '',
    '{{options}}'
].join('\n');


function printDumpsByDate(shards, dumps)
{
	var dates, shardcols;

	dates = Object.keys(dumps).sort();
	shardcols = shards[0].length + 1;
	dates.forEach(function (timestamp) {
		var header, tsdaypart, fmt;

		tsdaypart = timestamp.substr(0, '2015-07-06'.length);
		header = sprintf('Dumps for %s', tsdaypart);
		fmt = '    %' + shardcols + 's';
		printf('%s', header);
		printf('     %' + (shardcols - header.length) +
		    's  %5s  %7s  %13s  %13s\n',
		    'SHARD', 'MB', 'ELAPSED', 'START', 'END');

		shards.forEach(function (shardname) {
			var dump, mins, secs, starttime, endtime;
			var startday, endday, warnings, details;

			if (!dumps[timestamp].hasOwnProperty(shardname)) {
				printf('*' + fmt + '  MISSING\n', shardname);
				return;
			}

			dump = dumps[timestamp][shardname];
			secs = Math.ceil(dump.ended / 1000);
			mins = Math.floor(secs / 60);
			secs -= (mins * 60);
			starttime = dump.stime.toISOString().substr(
			    '2015-07-06T'.length);
			endtime = dump.mtime.toISOString().substr(
			    '2015-07-06T'.length);

			/*
			 * Sanity-check dump times and warn if days don't match.
			 */
			startday = dump.stime.toISOString().substr(
			    0, tsdaypart.length);
			endday = dump.mtime.toISOString().substr(
			    0, tsdaypart.length);
			details = false;
			warnings = [];
			if (tsdaypart != startday) {
				warnings.push('started on a different day ' +
				    'than expected');
				details = true;
			}
			if (startday != endday) {
				warnings.push('finished on a different ' +
				    'day than started');
				details = true;
			}

			printf('%s' + fmt + '  %5d  %3dm%02ds  %s  %s\n',
			    (warnings.length === 0 &&
			    !dump.waslate) ? ' ' : '*',
			    shardname, dump.sizemb, mins, secs,
			    starttime, endtime);

			warnings.forEach(function (msg) {
				printf(' ' + fmt + '  warn: %s\n', '', msg);
			});

			if (details) {
				printf('    path:  %s\n', dump.path);
				printf('    start: %s\n', dump.stime);
				printf('    done:  %s\n', dump.mtime);
				return;
			}
		});
	});
}

mod_cmdln.main(new MantaHk());
